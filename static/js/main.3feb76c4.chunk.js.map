{"version":3,"sources":["components/Alert.js","components/Navbar.js","components/Textform.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","visible","react_default","a","createElement","className","role","onClick","hideAlert","data-dismiss","aria-label","Navbar","concat","mode","text","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","id","aria-current","placeholder","name","onChange","changeTheme","value","theme","toggleMode","htmlFor","Textform","_useState","useState","_useState2","Object","slicedToArray","setText","Fragment","style","color","heading","e","target","rows","preventDefault","toUpperCase","toLowerCase","split","filter","word","length","defaultProps","about","App","setTheme","_useState3","_useState4","setMode","_useState5","_useState6","_useState7","msg","_useState8","setAlert","document","body","backgroundColor","objectSpread","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.3feb76c4.chunk.js","sourcesContent":["import React from 'react'\r\nimport useState from 'react'\r\n\r\nexport default function Alert(props) {\r\n    return (\r\n      props.alert.visible && (\r\n        <div className=\"alert alert-success alert-dismissible fade show d-flex justify-content-between\" role=\"alert\">\r\n          <div>\r\n            <strong>Change!</strong> Your mode has been changed.\r\n          </div>\r\n          <button onClick={props.hideAlert} className=\"close\" data-dismiss=\"alert\" aria-label=\"close\">‚ùå</button>\r\n        </div>\r\n      )\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import Link from \"react-router-dom\";\r\nexport default function Navbar(props) {\r\n  return (\r\n    <div className=\"App\">\r\n      <nav className={`navbar navbar-expand-lg navbar-light bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className={`navbar-brand text-${props.text}`} href=\"#\">\r\n            {props.title}\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0 \">\r\n              <li className=\"nav-item\">\r\n                <a\r\n                  className={`nav-link active text-${props.text}`}\r\n                  aria-current=\"page\"\r\n                  href=\"#\"\r\n                >\r\n                  Home\r\n                </a>\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n                <a\r\n                  className={`nav-link active text-${props.text}`}\r\n                  aria-current=\"page\"\r\n                  href=\"/about\"\r\n                >\r\n                  {props.about}\r\n                </a>\r\n              </li> */}\r\n            </ul>\r\n            <form className=\"d-flex\" role=\"search\">\r\n              <input\r\n                className=\"form-control me-2\"\r\n                type=\"search\"\r\n                placeholder=\"Search\"\r\n                aria-label=\"Search\"\r\n              />\r\n              <button className=\"btn btn-primary\" type=\"submit\">\r\n                Search\r\n              </button>\r\n            </form>\r\n            <div className=\"color checker mx-2\">\r\n            <input type=\"color\" id=\"color\" name=\"head\" onChange={props.changeTheme}\r\n           value={props.theme}/> </div>\r\n            <div className=\"form-check form-switch mx-2\">\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"checkbox\"\r\n                role=\"switch\"\r\n                id=\"flexSwitchCheckDefault\"\r\n                onClick={props.toggleMode}\r\n              />\r\n              <label\r\n                className={`form-check-label text-${props.text}`}\r\n                htmlFor=\"flexSwitchCheckDefault\"\r\n              >\r\n                Change Mode\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n      {/* <div classNameName=\"turn\"><h1>turn of player:{player}</h1></div>\r\n      <div classNameName=\"grid-container\">\r\n  <div classNameName=\"grid-item\" ><button onClick={click}></button></div>\r\n  <div classNameName=\"grid-item\"></div>\r\n  <div classNameName=\"grid-item\"></div>\r\n  <div classNameName=\"grid-item\"></div>\r\n  <div classNameName=\"grid-item\"></div>\r\n  <div classNameName=\"grid-item\"></div>\r\n  <div classNameName=\"grid-item\"></div>\r\n  <div classNameName=\"grid-item\"></div>\r\n  <div classNameName=\"grid-item\"></div>\r\n</div> */}\r\n    </div>\r\n  );\r\n}\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  about: PropTypes.string.isRequired,\r\n};\r\nNavbar.defaultProps = {\r\n  title: \"Put title\",\r\n  about: \"put about\",\r\n};\r\n","import React ,{useState} from 'react'\r\n\r\nexport default function Textform(props) {\r\n  \r\n  const[text,setText]=useState(\"Enter text here\");\r\n  const handleClick= (e) => {\r\n    e.preventDefault();\r\n    setText(text.toUpperCase());\r\n  }\r\n  const handleChange=(e)=>{\r\n   setText(e.target.value);\r\n\r\n  }\r\n  const handleClicklo=(e)=>{\r\n    e.preventDefault();\r\n    setText(text.toLowerCase());\r\n  }\r\n  const clearText=(e)=>{\r\n    e.preventDefault();\r\n    setText(\"\");\r\n  }\r\n  return (\r\n    <>\r\n\r\n    <div className=\"container\"  style={{color:props.text}}>\r\n      <form>\r\n  <div className=\"form-group\">\r\n    <h1>{props.heading}</h1>\r\n    <label htmlFor=\"mybox\">Email address</label>\r\n    <textarea className=\"form-control\" onChange={handleChange}  id=\"mybox\" rows=\"3\"  value={text}></textarea>\r\n    <button className=\"btn btn-primary\" onClick={handleClick}>Convert to uppercase</button>\r\n    <button className=\"btn btn-primary mx-2\" onClick={handleClicklo}>Convert to lowercase</button>\r\n    <button className=\"btn btn-primary \" onClick={clearText}>Clear</button>\r\n  </div>\r\n  \r\n  \r\n</form>\r\n\r\n    </div>\r\n    <div className=\"container my-3\" style={{color:props.text}}>\r\n      <h1>Your text summary</h1>\r\n      <p>words {text.split(\" \").filter(word=>word.length>0).length} characters {text.length} </p>\r\n      <p> time to read {text.split(\" \").filter(word=>word.length>0).length*0.008}</p>\r\n      <h2>Preview</h2>\r\n      <p>{text}</p>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","// import logo from './logo.svg';\nimport { useState } from 'react';\nimport React from 'react';\nimport './App.css';\nimport About from './components/About';\nimport Alert from './components/Alert';\nimport Navbar from './components/Navbar';\nimport Textform from './components/Textform';\n// import { BrowserRouter, Routes, Route,Link } from \"react-router-dom\";\n\n// let turn=new useState(true);\n// let player ='O';\n// function click(){\n//   console.log('hello');\n//   if(turn==true){player='O';turn=!turn;}\n//   else{\n//     turn=!turn;\n//     player='X';\n//   }\n// }\n\nfunction App() {\n  const [theme,setTheme]=useState('');\n  const [mode,setMode] = useState('light');\n  const[text,setText]=useState('dark');\n  const[alert,setAlert]=useState({  \n      msg : \"\",\n      type: \"\",\n      visible: false,\n    });\n  \n  const changeAlert=(message,type)=> {\n    setAlert({  \n      msg : message,\n      type: type,\n      visible: true,\n    });\n  }\n  const changeTheme=(e)=>{\n     setTheme(e.target.value);\n     document.body.style.backgroundColor=theme;\n  }\n  const dismissAlert = () => {\n    setAlert({...alert, visible: false});\n  }\n\n  const toggleMode=()=> {\n    changeAlert('mode change','dismissible')\n    if(mode==='dark') {\n      document.body.style.backgroundColor=\"white\";\n      document.title=\"Text Utility\"\n      setMode('light');\n      setText('black');\n    }\n    else{\n      document.body.style.backgroundColor=\"#342158\";\n      document.title=\"Text Utility-Dark mode\"\n      setMode('dark');\n      setText('white');\n    }\n    }\n  return (\n    <>\n    <Navbar title=\"project\" about=\"about\" mode={mode} toggleMode={toggleMode} text={text} theme={theme} changeTheme={changeTheme}/>\n    {/* <div className=\"container\"><Textform heading=\"Enter text to analyse\"/></div> */}\n    <Alert alert={alert} hideAlert={dismissAlert} />\n    <Textform text={text} />\n    {/* <BrowserRouter>\n    <Routes>\n            <Route path=\"/about\" element={<About />}>\n            </Route>\n            <Route path=\"/\" element={<Textform text={text} />}>\n            </Route>\n    </Routes>\n    </BrowserRouter> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}